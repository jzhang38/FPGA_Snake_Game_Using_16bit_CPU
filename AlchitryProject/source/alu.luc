module alu (
    input alufn[6],
    input a[16],
    input b[16],
    output out[16],
    output z,
    output v,
    output n
  ) {
  
  adder adder_;
  boolean boolean_;
  shifter shifter_;
  compare compare_; 
  
  sig xz, xv, xn;
  
  always {
    
    adder_.alufn = alufn;
    adder_.a = a;
    adder_.b = b;
    
    xz = adder_.z;
    xv = adder_.v;
    xn = adder_.n; 
    
    z = xz;
    v = xv;
    n = xn;
    
    compare_.alufn = alufn;
    compare_.z = xz;
    compare_.v = xv;
    compare_.n = xn;
    
    boolean_.alufn = alufn;
    boolean_.a = a;
    boolean_.b = b;
    
    shifter_.alufn = alufn;
    shifter_.a = a;
    shifter_.b = b;
    
    case(alufn[5:4]){
      b00 : out = adder_.out;
      b01 : out = boolean_.s;
      b10 : out = shifter_.s;
      b11 : out = compare_.s;
      default: out = 16b0;
    }
      
    
    
  }
}
