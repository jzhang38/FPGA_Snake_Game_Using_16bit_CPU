/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module control_unit_10 (
    input clk,
    input irq,
    input z,
    input reset,
    input [5:0] opcode,
    output reg [2:0] pcsel,
    output reg wasel,
    output reg asel,
    output reg ra2sel,
    output reg bsel,
    output reg [5:0] alufn,
    output reg [1:0] wdsel,
    output reg werf,
    output reg moe,
    output reg xwr,
    output reg random_write
  );
  
  
  
  localparam CU_ROM = 1152'h700100c6c030b00c0c700100acc02f300b0c700100eec03ab00e6c70011c004020b0080c70010046c010b0040c7001002cc00f30030c7001006ec01ab0066c70011c004000b0000c08d58234408d11c00400031c00406004081670011c00470011c00470011c00470011c00470011c00470011c00470011c00470011c00470011c00470011c00470011c00470011c004;
  
  reg M_irq_sampler_d, M_irq_sampler_q = 1'h0;
  
  always @* begin
    M_irq_sampler_d = M_irq_sampler_q;
    
    M_irq_sampler_d = irq;
    random_write = 1'h0;
    pcsel = CU_ROM[(opcode)*18+15+2-:3];
    wasel = CU_ROM[(opcode)*18+14+0-:1];
    asel = CU_ROM[(opcode)*18+13+0-:1];
    ra2sel = CU_ROM[(opcode)*18+12+0-:1];
    bsel = CU_ROM[(opcode)*18+11+0-:1];
    alufn = CU_ROM[(opcode)*18+5+5-:6];
    wdsel = CU_ROM[(opcode)*18+3+1-:2];
    werf = CU_ROM[(opcode)*18+2+0-:1];
    moe = CU_ROM[(opcode)*18+1+0-:1];
    xwr = CU_ROM[(opcode)*18+0+0-:1];
    if (opcode == 6'h1d && z == 1'h1) begin
      pcsel = 3'h1;
    end else begin
      if (opcode == 6'h1e && z == 1'h0) begin
        pcsel = 3'h1;
      end
    end
    if (opcode == 6'h1b) begin
      werf = 1'h1;
      random_write = 1'h1;
    end
    if (reset) begin
      xwr = 1'h0;
      werf = 1'h0;
    end
    if (M_irq_sampler_q == 1'h1) begin
      pcsel = 3'h4;
      wasel = 1'h1;
      werf = 1'h1;
      wdsel = 2'h0;
      xwr = 1'h0;
    end
  end
  
  always @(posedge clk) begin
    M_irq_sampler_q <= M_irq_sampler_d;
  end
  
endmodule
