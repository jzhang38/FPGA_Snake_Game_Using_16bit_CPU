/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module memoryunit_5 (
    input clk,
    input [9:0] raddr,
    input [9:0] waddr,
    input [15:0] data_memory_input,
    input xwr,
    output reg [15:0] data_memory_output,
    input [15:0] ia,
    output reg [31:0] instruction
  );
  
  
  
  localparam SAMPLE_CODE = 9728'h77fffedb77fffffcc39c00017bfbfffad77c0000c3bd000177fb0005d77d007f839ff80083bff800839ff800b75ae800b739e000c3bf000ac39f000b6f5f00006f3f000077fe000683dcf800a39ce80093a1d0009380c8007bf40016a694e000a79ce800a694a800d3bd0000d39c0000d7a10040d7800020d6a10000d68000007bfc0020a39ce80093a1a000938098007bfc0004d39600097bfc0026a39ce80093a18800938080007bfc000ad39600087bfc002ca39ce80093a17800938070007bfc0010d39600077bfc0032a39ce80093a16800938060007bfc0016d39600067bfc0038a39ce80093a15800938050007bfc001cd39600057bfc003ea39ce80093a14800938040007bfc0022d39600047bfc0044a39ce80093a13800938030007bfc0028d39600037bfc004aa39ce80093a12800938020007bfc002ed39600027bfc0050a39ce80093a11800938010007bfc0034d3960001677c00007bfd0001c37f0001677c0000c37f0008e3b20010a79c9800b392e000c39f00067bfc0009d796000a677c00007bfd0001c37f0001677c0000c37f0008e3b00010a79c8800b390e000c39f00067bfc0014d7960009677c00007bfd0001c37f0001677c0000c37f0008e3ae0010a79c7800b38ee000c39f00067bfc001fd7960008677c00007bfd0001c37f0001677c0000c37f0008e3ac0010a79c6800b38ce000c39f00067bfc002ad7960007677c00007bfd0001c37f0001677c0000c37f0008e3aa0010a79c5800b38ae000c39f00067bfc0035d7960006677c00007bfd0001c37f0001677c0000c37f0008e3a80010a79c4800b388e000c39f00067bfc0040d7960005677c00007bfd0001c37f0001677c0000c37f0008e3a60010a79c3800b386e000c39f00067bfc004bd7960004677c00007bfd0001c37f0001677c0000c37f0008e3a40010a79c2800b384e000c39f00067bfc0056d7960003677c00007bfd0001c37f0001677c0000c37f0008e3a20010a79c1800b382e000c39f00067bfc0061d7960002677c00007bfd0001c37f0001677c0000c37f0008e3a00010a79c0800b380e000c39f00067bfc006cd7960001677c00007bfd0001c37f0002677c0000c37f0010e3b90010a79cd000b399e000c39f000683b5f8008394f800827df800825cf80082b3f8008292f8007bfb0006d376000983b5f8008394f800823df800821cf80082b1f8008290f8007bfb000ed376000883b5f8008394f80081fdf80081dcf80082aff800828ef8007bfb0016d376000783b5f8008394f80081bdf800819cf80082adf800828cf8007bfb001ed376000683b5f8008394f800817df800815cf80082abf800828af8007bfb0026d376000583b5f8008394f800813df800811cf80082a9f8008288f8007bfb002ed376000483b5f8008394f80080fdf80080dcf80082a7f8008286f8007bfb0036d376000383b5f8008394f80080bdf800809cf80082a5f8008284f8007bfb003ed376000283b5f8008394f800807df800805cf80082a3f8008282f8007bfb0046d37600018021c0008000b80083a1f8008380f8007bfc011ad396000b83dff80082d6f00083bff800839ff80077fffffbc39c000167fc000077fd0003dbbc03ff839ff800c2df0001c31f0001c2ff0000c03f001dc01f000fb75ae800b739e000c3bf000ac39f000bc35a7fffc3397fff;
  
  wire [6-1:0] M_data_memory_read_data;
  reg [10-1:0] M_data_memory_waddr;
  reg [6-1:0] M_data_memory_write_data;
  reg [1-1:0] M_data_memory_write_en;
  reg [10-1:0] M_data_memory_raddr;
  simple_dual_ram_13 #(.SIZE(3'h6), .DEPTH(11'h400)) data_memory (
    .wclk(clk),
    .rclk(clk),
    .waddr(M_data_memory_waddr),
    .write_data(M_data_memory_write_data),
    .write_en(M_data_memory_write_en),
    .raddr(M_data_memory_raddr),
    .read_data(M_data_memory_read_data)
  );
  
  always @* begin
    instruction = SAMPLE_CODE[(ia[2+13-:14])*32+31-:32];
    M_data_memory_raddr = raddr[0+9-:10];
    M_data_memory_waddr = waddr[0+9-:10];
    M_data_memory_write_data = data_memory_input;
    M_data_memory_write_en = xwr;
    data_memory_output = M_data_memory_read_data;
  end
endmodule
